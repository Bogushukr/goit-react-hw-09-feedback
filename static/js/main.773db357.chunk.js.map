{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","App.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["module","exports","Section","title","children","className","styles","Section__title","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","Statistic","Statistic__data","Statistic__item","FeedbackOptions","options","onLeaveFeedback","map","option","FeedbackOptions__button","onClick","name","Notification","message","Notification__title","App","useState","setGoodState","setNeutralState","setBadState","updateFeedback","useCallback","event","currentTarget","prevState","countTotalFeedback","reduce","acc","value","positive","Math","round","countPositiveFeedbackPercentage","App__title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.773db357.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistic\":\"Statistics_Statistic__3rbwe\",\"Statistic__title\":\"Statistics_Statistic__title__b2sWF\",\"Statistic__data\":\"Statistics_Statistic__data__2NbBq\",\"Statistic__item\":\"Statistics_Statistic__item__2bTfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1kTEi\",\"Section__title\":\"Section_Section__title__3PSV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackOptions\":\"FeedbackOptions_FeedbackOptions__31Voi\",\"FeedbackOptions__button\":\"FeedbackOptions_FeedbackOptions__button__I_OnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__baOZO\",\"Notification__title\":\"Notification_Notification__title__DR-Jg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App__title\":\"App_App__title__yysBe\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.Section}>\n      <h1 className={styles.Section__title}>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = { title: '(empty)' };\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element),\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className={styles.Statistic}>\n      <ul className={styles.Statistic__data}>\n        <li className={styles.Statistic__item}>Good: {good}</li>\n        <li className={styles.Statistic__item}>Neutral: {neutral}</li>\n        <li className={styles.Statistic__item}>Bad: {bad}</li>\n        <li className={styles.Statistic__item}>Total: {total}</li>\n        <li className={styles.Statistic__item}>\n          Positive feedback: {positivePercentage}%\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0,\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={styles.FeedbackOptions}>\n      {options.map(option => {\n        return (\n          <button\n            key={option}\n            className={styles.FeedbackOptions__button}\n            onClick={onLeaveFeedback}\n            name={option}\n          >\n            {option}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return (\n    <div className={styles.Notification}>\n      <p className={styles.Notification__title}>{message}</p>\n    </div>\n  );\n}\n\nNotification.propTypes = { message: PropTypes.string.isRequired };\nNotification.defaultProps = { message: '(empty)' };","import React from 'react';\nimport { useState, useCallback } from 'react';\n\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nimport styles from './App.module.css';\n\nexport default function App() {\n  const [good, setGoodState] = useState(0);\n  const [neutral, setNeutralState] = useState(0);\n  const [bad, setBadState] = useState(0);\n\n  const updateFeedback = useCallback(event => {\n    const { name } = event.currentTarget;\n    switch (name) {\n      case 'good':\n        setGoodState(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutralState(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBadState(prevState => prevState + 1);\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  const countTotalFeedback = () => {\n    const values = [good, neutral, bad];\n    return values.reduce((acc, value) => acc + value, 0);\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    const positive = good;\n    return Math.round((positive / total) * 100);\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  const options = ['good', 'neutral', 'bad'];\n\n  return (\n    <Section title={'Please leave feedback'}>\n      <FeedbackOptions options={options} onLeaveFeedback={updateFeedback} />\n      <h2 className={styles.App__title}>Statistics</h2>\n      {total > 0 ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </Section>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}